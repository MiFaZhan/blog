name: Deploy to GitHub Pages
on:
  push:
    branches: [ mi ]  # 监听 main 分支的推送
  workflow_dispatch:    # 允许手动触发
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest  # 在 GitHub 的服务器上运行
    steps:
      # 步骤1：下载私有仓库的代码
      - name: Checkout
        uses: actions/checkout@v4
        with:
                persist-credentials: true  # 允许后续步骤使用 GITHUB_TOKEN 推送代码

      # 步骤2：安装 Node.js 环境
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20  # 需与你的 Hexo 版本匹配

      # 步骤3：安装 Hexo 依赖
      - name: Install Dependencies
        run: npm install

      # 步骤4：生成豆瓣页面（未配置 builtin: true）
      # 步骤5：生成静态网页文件（Hexo 编译）
      - name: Generate Static Files
        run: |
            npx hexo douban
            npm run build

      # 步骤6：提交更新后的源文件（包含 abbrlink）到 blog 仓库
      - name: Commit Source Changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # 使用默认 token
        run: |
            git config --global user.name "GitHub Actions"
            git config --global user.email "actions@github.com"
            git add .
            git commit -m "chore: sync abbrlink from generated files" || echo "No changes to commit"
            git push origin mi

      # 步骤7：推送生成的网页到公开仓库
      - name: Deploy to Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          deploy_key: ${{ secrets.DEPLOY_KEY }}  # 使用之前添加的私钥
          publish_dir: ./public                  # Hexo 生成的文件夹
          external_repository: MiFaZhan/MiFaZhan.github.io  # 改为你的公开仓库名
          publish_branch: blog                   # 推送到公开仓库的 main 分支

      - name: Sync back to blog-source
        env:
          SOURCE_REPO_TOKEN: ${{ secrets.PAT }}
        run: |
          # 设置 git 配置
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          
          # 克隆 blog-source 仓库
          git clone https://$SOURCE_REPO_TOKEN@github.com/MiFaZhan/blog-source.git blog-source-tmp
          
          # 复制更新后的文件
          rsync -av --progress source/ blog-source-tmp/source/ --delete
          
          # 提交更改到 blog-source
          cd blog-source-tmp
          if [ -n "$(git status --porcelain)" ]; then
            git add -A
            git commit -m "自动更新: 同步 abbrlink 属性"
            git push origin main
            echo "✅ 已同步 abbrlink 回 blog-source"
          else
            echo "🟢 无变化，无需同步"
          fi
